// student login details type
export interface loginData {
	email: string;
	password: string;
}

//  student profile details type
export interface StudentDetails {
	userId?: string; // id generated by MongoDB while registering the student for login (response.data.student._id)
	// Personal Information
	name?: string;
	enrollmentNumber?: string;
	dob?: string; // Date of Birth (DD/MM/YY)
	gender?: string;
	category?: string;
	speciallyAbled?: string;
	mobileNo?: string;
	altMobileNo?: string;
	email?: string;
	localAddress?: string;
	localPincode?: string;
	permanentAddress?: string;
	permanentPincode?: string;
	hometown?: string;
	state?: string;
	passportPhoto?: string; // URL or base64 encoded image

	// Academic Information
	ssc?: {
		percentage?: number;
		schoolName?: string;
		board?: string;
		yearOfPassing?: number;
	};
	hssc?: {
		percentage?: number;
		schoolName?: string;
		board?: string;
		yearOfPassing?: number;
	};
	diploma?: {
		percentage?: number;
		admissionYear?: number;
		passOutYear?: number;
		instituteName?: string;
	};
	undergraduate?: {
		universityName?: string;
		course?: string;
		aggregateCGPA?: number;
		aggregatePercentage?: number;
		specialization?: string;
		yearOfAdmission?: number;
		yearOfPassing?: number;
	};
	postgraduate?: {
		universityName?: string;
		course?: string;
		yearOfAdmission?: number;
		yearOfPassing?: number;
		aggregateCGPA?: number;
		aggregatePercentage?: number;
	};
	semesterDetails?: Array<{
		semester?: number;
		sgpa?: number;
		atkt?: number; // Number of ATKT in the semester
	}>;

	// Academic Gaps and Backlogs
	gaps?: {
		hasGap?: string;
		numberOfYears?: number;
	};
	backlogs?: {
		hasActiveBacklogs?: string;
		totalActiveBacklogs?: number;
		backlogHistory?: string;
	};

	// Family Details
	father?: {
		name?: string;
		contactNo?: string;
		occupation?: string;
	};
	mother?: {
		name?: string;
		contactNo?: string;
	};

	// Career and Experience
	internship?: string;
}
